<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	">
	<!--注解扫描包 配置扫描目录 会扫描报下的所有controller -->
	<context:component-scan base-package="com.mgzf.mesg"/>

	<import resource="apollo-config.xml"/>

	<!-- 扫描所有的service实现类，并注入依赖 -->
	<context:component-scan base-package="com.mgzf.mesg.service" />

	<context:annotation-config />

	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="resultSetLogEnabled" value="true" />
		<property name="connectionLogEnabled" value="true" />
		<property name="statementLogEnabled" value="true" />
	</bean>
	<!-- 以下为数据源配置，其它配置不要向下写了，都写在上面 -->
	<!-- mogoroomDb master -->
	<bean id="dataSource" class="com.mgzf.sdk.util.datasource.MogoDruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${mogo.master.jdbc.url}"/>
		<property name="username" value="${mogo.master.jdbc.username}"/>
		<property name="password" value="${mogo.master.jdbc.password}"/>
		<!-- 公共属性 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter"/>
			</list>
		</property>
	</bean>

	<!--mogoroomDb slave -->
	<bean id="mogoDBSlave" class="com.mgzf.sdk.util.datasource.MogoDruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${mogo.slave.jdbc.url}"/>
		<property name="username" value="${mogo.slave.jdbc.username}"/>
		<property name="password" value="${mogo.slave.jdbc.password}"/>
		<!-- 公共属性 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter"/>
			</list>
		</property>
	</bean>

	<!--mesg master -->
	<bean id="mesgDBMaster" class="com.mgzf.sdk.util.datasource.MogoDruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${mesg.master.jdbc.url}"/>
		<property name="username" value="${mesg.master.jdbc.username}"/>
		<property name="password" value="${mesg.master.jdbc.password}"/>
		<!-- 公共属性 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter"/>
			</list>
		</property>
	</bean>

	<!--mesg slave -->
	<bean id="mesgDBSlave" class="com.mgzf.sdk.util.datasource.MogoDruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${mesg.slave.jdbc.url}"/>
		<property name="username" value="${mesg.slave.jdbc.username}"/>
		<property name="password" value="${mesg.slave.jdbc.password}"/>
		<!-- 公共属性 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
		<property name="testOnReturn" value="${jdbc.testOnReturn}"/>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter"/>
			</list>
		</property>
	</bean>

	<!-- 多数据源配置 -->
	<bean id="multipleDataSource" class="com.mgzf.sdk.datasource.multi.MultiDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dataSource" key="dataSource"/>
				<entry value-ref="mogoDBSlave" key="mogoDBSlave"/>
				<entry value-ref="mesgDBMaster" key="mesgDBMaster"/>
				<entry value-ref="mesgDBSlave" key="mesgDBSlave"/>
			</map>
		</property>
		<!-- 默认使用原来的数据源 -->
		<property name="defaultTargetDataSource" ref="dataSource"/>
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource"/>
		<property name="mapperLocations">
			<list>
				<value>classpath:com/mgzf/mesg/service/dao/impl/mapper/*.xml</value>
			</list>
		</property>
		<property name="plugins">
			<array>
				<!-- 分页插件 使用pagehelper 5.0.0 -->
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							params=count=countSql
							autoRuntimeDialect=true
						</value>
					</property>
				</bean>
				<bean class="com.mgzf.mesg.service.impl.interceptor.UpdateInterceptor">
				</bean>
			</array>
		</property>
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>


	<!-- 扫描 basePackage下所有的接口，根据对应的mapper.xml为其生成代理类-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mgzf.mesg.service.dao.impl.mapper"/>
	</bean>

	<!-- 事务管理配置 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>

	<tx:annotation-driven proxy-target-class="true" transaction-manager="txManager" />

	<bean id="mesgConfig" class="com.mgzf.mesg.service.config.MesgConfig" />
    <!-- 数据源切换的切面 -->
	<bean class="com.mgzf.sdk.datasource.multi.SelectDataSourceAspect" >
		<property name="defaultMaster" value="dataSource"/>
	</bean>


</beans>